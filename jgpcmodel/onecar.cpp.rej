*** onecar.cpp	2012-05-06 11:19:20.741477243 -0500
--- onecar.cpp.orig	2012-05-06 11:20:23.204726336 -0500
***************
*** 33,40 ****
  add car as class object
  move waypoints and commands to car object
  add tower object
- add a ray to the nose of the car to observe its collisions
- 
  */
  
  
--- 33,38 ----
  add car as class object
  move waypoints and commands to car object
  add tower object
  */
  
  
***************
*** 96,105 ****
  OdeRadarSensor *rad;
  OdePath *path;
  
- // ray for testing
- static dGeomID ray;
- 
- 
  // things that the user controls
  
  //static dReal speed=0,steer=0;	// user commands
--- 94,99 ----
  OdeRadarSensor *rad;
  OdePath *path;
  
  // things that the user controls
  
  //static dReal speed=0,steer=0;	// user commands
***************
*** 175,186 ****
        dSpaceCollide ((dSpaceID)o2, data, &nearCallback);
      
        } else {*/
-   dContactGeom rhit;
-   if (dGeomGetClass (o1) == dRayClass || dGeomGetClass (o2) == dRayClass) {
-     if (dCollide (o1,o2,1,&rhit,sizeof(dContactGeom))) {
-       printf("ray collision at %f,%f,%f\n", rhit.pos[0],rhit.pos[1],rhit.pos[2]);
-     }
-   } else {
      n = dCollide (o1,o2,N,&contact[0].geom,sizeof(dContact));
      if (n > 0) {
        for (i=0; i<n; i++) {
--- 169,174 ----
        dSpaceCollide ((dSpaceID)o2, data, &nearCallback);
      
        } else {*/
      n = dCollide (o1,o2,N,&contact[0].geom,sizeof(dContact));
      if (n > 0) {
        for (i=0; i<n; i++) {
***************
*** 209,215 ****
        }
        //}
    }
!   }
  }
  
  
--- 197,203 ----
        }
        //}
    }
! 
  }
  
  
***************
*** 319,338 ****
    
    c1->draw();
    //c2->draw();
- 
-   dMatrix3 candir;
-   dReal* cpos, catt;
-   cpos = c1->getCarPos();
-   catt = c1->getCarAttitude();
-   // 5th field is direction in radians
-   dRFromAxisAndAngle (candir,0,0,1,catt[2]);
-   dGeomRaySet (ray,cpos[0]+LENGTH/2.0,cpos[1]+WIDTH/2.0,0.5,candir[0],candir[1],candir[2]);
-   dVector3 origin,dir;
-   dGeomRayGet (ray,origin,dir);
-   dReal length = dGeomRayGetLength (ray);
-   for (j=0; j<3; j++) dir[j] = dir[j]*length + origin[j];
-   dsDrawLine (origin,dir);
- 
    
    dVector3 ss;
    
--- 307,312 ----
    
    c1->draw();
    //c2->draw();
    
    dVector3 ss;
    
***************
*** 395,412 ****
      printf("Could not open output file\n");
    else
      c1->recordTrack(ofile);
! 
!   // create ray on front of car
!   ray = dCreateRay(space,10);
!   dMatrix3 candir;
!   dReal* cpos, catt;
!   cpos = c1->getCarPos();
!   catt = c1->getCarAttitude();
!   // 5th field is direction in radians
!   dRFromAxisAndAngle (candir,0,0,1,catt[2]);
!   dGeomRaySet (ray,cpos[0]+LENGTH/2.0,cpos[1]+WIDTH/2.0,0.5,candir[0],candir[1],candir[2]);
! 
! 
    /*
    c2 = new Car(LENGTH*1.5,WIDTH*1.3,HEIGHT*1.1,RADIUS*1.2);
    c2->setSpace(space);
--- 369,375 ----
      printf("Could not open output file\n");
    else
      c1->recordTrack(ofile);
!   
    /*
    c2 = new Car(LENGTH*1.5,WIDTH*1.3,HEIGHT*1.1,RADIUS*1.2);
    c2->setSpace(space);
